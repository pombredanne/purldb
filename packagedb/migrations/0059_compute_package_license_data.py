# Generated by Django 4.1.2 on 2023-05-10 23:34

from django.db import migrations
from django.db.models import Q


def compute_package_declared_license_expression_spdx(apps, schema_editor):
    """
    Compute Package `declared_license_expression_spdx`, when missing,
    from `declared_license_expression`, when available.
    """
    from licensedcode.cache import build_spdx_license_expression

    Package = apps.get_model('packagedb', 'Package')
    packages = Package.objects.filter(
        ~Q(declared_license_expression="") & Q(declared_license_expression_spdx="") |
        Q(declared_license_expression__isnull=False) & Q(declared_license_expression_spdx__isnull=True)
    )

    for package in packages:
        if spdx := build_spdx_license_expression(package.declared_license_expression):
            package.declared_license_expression_spdx = spdx
            package.save()


class Migration(migrations.Migration):
    dependencies = [
        ("packagedb", "0058_package_licenses_field_update"),
    ]

    operations = [
        migrations.RunPython(
            compute_package_declared_license_expression_spdx,
            reverse_code=migrations.RunPython.noop,
        ),
    ]
